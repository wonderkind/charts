apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}-scheduler
  labels:
    app: {{ template "airflow.name" . }}-scheduler
    chart: {{ template "airflow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "airflow.name" . }}-scheduler
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        configmap.fabric8.io/update-on-change: "{{ template "airflow.fullname" . }}-env"
      labels:
        app: {{ template "airflow.name" . }}-scheduler
        release: {{ .Release.Name }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}-scheduler
          image: {{ .Values.airflow.image.repository }}:{{ .Values.airflow.image.tag }}
          imagePullPolicy: {{ .Values.airflow.image.pull_policy}}
          envFrom:
          - configMapRef:
              name: "{{ template "airflow.fullname" . }}-env"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow.fullname" . }}
                  key: postgresUser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow.fullname" . }}
                  key: postgresPassword
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow.fullname" . }}
                  key: redisPassword
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: dags-data
              mountPath: {{ .Values.airflow.dag_path }}
          {{- end }}
          args: ["scheduler", "-n", "{{ .Values.airflow.scheduler_num_runs }}", "-p"]
      volumes:
        - name: dags-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "airflow.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
